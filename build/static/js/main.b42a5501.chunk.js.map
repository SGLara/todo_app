{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUI","Fragment","style","marginTop","map","App","render"],"mappings":"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","file":"static/js/main.b42a5501.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error\n    } = useLocalStorage('TODOS_V1', []);\n\n    const [searchValue, setSearchValue] = React.useState('');\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const completedTodos = todos.filter(todo => todo.completed).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = [];\n\n    if (!searchValue.length > 0) {\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter(todo => {\n            const todoText = todo.text.toLowerCase();\n            const searchText = searchValue.toLowerCase();\n\n            return todoText.includes(searchText);\n        });\n    }\n\n    const completeTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = true;\n        saveTodos(newTodos);\n    }\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n        });\n        saveTodos(newTodos);\n    }\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    }\n\n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            addTodo,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n            openModal,\n            setOpenModal\n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n}\n\nexport { TodoContext, TodoProvider };","import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n\n    React.useEffect(() => {\n        setTimeout(() => {\n            try {\n                const localStorageItem = localStorage.getItem(itemName);\n                let parsedItem;\n\n                if (!localStorageItem) {\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\n                    parsedItem = initialValue;\n                } else {\n                    parsedItem = JSON.parse(localStorageItem);\n                }\n\n                setItem(parsedItem);\n                setLoading(false);\n            } catch (error) {\n                setError(error);\n            }\n\n        }, 1500);\n    });\n\n    const saveItem = (newItem) => {\n        try {\n            const stringifiedItem = JSON.stringify(newItem);\n            localStorage.setItem(itemName, stringifiedItem);\n            setItem(newItem);\n        } catch (error) {\n            setError(error);\n        }\n    }\n\n    return { item, saveItem, loading, error };\n}\n\nexport { useLocalStorage };","import React from 'react';\nimport './index.css';\nimport { TodoContext } from '../TodoContext';\n\nfunction TodoCounter() {\n    const { totalTodos, completedTodos } = React.useContext(TodoContext);\n\n    return (\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n    );\n}\n\nexport { TodoCounter };\n// export default TodoCounter;","import React from 'react';\nimport './index.css';\nimport {TodoContext} from '../TodoContext';\n\nfunction TodoSearch() {\n    const {searchValue, setSearchValue} = React.useContext(TodoContext);\n\n    const onSearchValueChange = (event) => {\n        // console.log(event.target.value);\n        setSearchValue(event.target.value);\n    }\n\n    return (\n        <input\n            className='TodoSearch'\n            placeholder='Buscar TO-DO'\n            value={searchValue}\n            key='search'\n            onChange={onSearchValueChange}\n        />\n    );\n}\n\nexport { TodoSearch };","import React from 'react';\nimport './index.css';\n\nfunction TodoList(props) {\n    return (\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n}\n\nexport { TodoList };","import React from 'react';\nimport './index.css';\n\nfunction TodoItem(props) {\n    return (\n        <li className='TodoItem'>\n            <span\n                className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n                onClick={props.onComplete}\n            >\n                âœ”\n            </span>\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n                {props.text}\n            </p>\n            <span\n                className='Icon Icon-delete'\n                onClick={props.onDelete}\n            >\n                X\n            </span>\n        </li>\n    );\n}\n\nexport { TodoItem };","import React from 'react';\nimport './index.css';\n\nfunction CreateTodoButton(props) {\n    const onClickButton = () => {\n        props.setOpenModal(prevState => !prevState);\n    };\n\n\n    return (\n        <button\n            className=\"CreateTodoButton\"\n            onClick={onClickButton}\n        >\n            +\n        </button>\n    );\n}\n\nexport { CreateTodoButton };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Modal({ children }) {\n    return ReactDOM.createPortal(\n        <div className='ModalBackground'>\n            {children}\n        </div>,\n        document.getElementById('modal')\n    );\n}\n\nexport { Modal };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './index.css';\n\nfunction TodoForm() {\n    const [newTodoValue, setNewTodoValue] = React.useState('');\n\n    const {\n        addTodo,\n        setOpenModal\n    } = React.useContext(TodoContext);\n\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    }\n    const onCancel = () => {\n        setOpenModal(false);\n    }\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <label>Escribe tu nuevo TODO</label>\n            <textarea\n                value={newTodoValue}\n                onChange={onChange}\n                placeholder='Escribe tu nueva TO-DO'\n            />\n            <div className='TodoForm-buttonContainer'>\n                <button\n                    type='button'\n                    className='TodoForm-button TodoForm-button--cancel'\n                    onClick={onCancel}\n                >\n                    Cancelar\n                </button>\n                <button\n                    type='submit'\n                    className='TodoForm-button TodoForm-button--add'\n                >\n                    Agregar\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport { TodoForm };","import React from 'react';\nimport { TodoCounter } from \"../TodoCounter/index\";\nimport { TodoSearch } from \"../TodoSearch/index\";\nimport { TodoList } from \"../TodoList/index\";\nimport { TodoItem } from \"../TodoItem/index\";\nimport { CreateTodoButton } from \"../CreateTodoButton/index\";\nimport { TodoContext } from '../TodoContext';\nimport { Modal } from '../Modal';\nimport { TodoForm } from '../TodoForm';\n\nfunction AppUI() {\n    const {\n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal\n    } = React.useContext(TodoContext);\n\n    return (\n        <React.Fragment>\n            <TodoCounter />\n            <TodoSearch />\n\n            {/* Another way to do it */}\n            {/* <TodoContext.Consumer> */}\n            {/* {({\n                    error,\n                    loading,\n                    searchedTodos,\n                    completeTodo,\n                    deleteTodo\n                }) => ( */}\n            <TodoList>\n                {error && <center><p>Â¡Se ha producido un error!</p></center>}\n                {loading && <center><p>Â¡Cargando... por favor espere!</p></center>}\n                {(!loading && !searchedTodos.length) &&\n                    <center style={{\n                        marginTop: '20px'\n                    }}>\n                        <p>Â¡Crea tu primer TODO!</p>\n                    </center>}\n\n                {searchedTodos.map(todo => (\n                    <TodoItem\n                        key={todo.text}\n                        text={todo.text}\n                        completed={todo.completed}\n                        onComplete={() => completeTodo(todo.text)}\n                        onDelete={() => deleteTodo(todo.text)}\n                    />\n                ))}\n            </TodoList>\n            {/* )} */}\n            {/* </TodoContext.Consumer> */}\n\n            {openModal && (\n                <Modal>\n                    <TodoForm />\n                </Modal>\n            )}\n            <CreateTodoButton\n                setOpenModal={setOpenModal}\n            />\n        </React.Fragment>\n    );\n}\n\nexport { AppUI };","import React from 'react';\nimport { AppUI } from './AppUI';\nimport { TodoProvider } from '../TodoContext';\n\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index.js';\nimport './index.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}